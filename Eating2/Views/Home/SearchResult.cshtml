@using Eating2.Business.ViewModels;
@using PagedList;
@using PagedList.Mvc;
@using Eating2.AppConfig
@model PagedList.IPagedList<FoodViewModel>

<div class="jumbotron">
    <h1>Bạn muốn ăn gì?</h1>
    <p class="lead">Cùng tìm kiếm những địa điểm ăn uống xung quanh mình!</p>

    @Html.Action("FilterForFood", "Filter", new { area = "" })
    <br />
</div>

<br />
<div>
    <b>Sắp xếp theo:</b>

    <button class="btn btn-default" onclick="style"> @Html.SortableLink(Request, "Name", "Tên món ăn") </button>

    <button class="btn btn-default"> @Html.SortableLink(Request, "Cost", "Giá")</button>

    <button class="btn btn-default"> @Html.SortableLink(Request, "StoreNameDisplayOnly", "Cửa hàng") </button>

    <button class="btn btn-default"> @Html.SortableLink(Request, "DistrictDisplayOnly", "Khu vực") </button>

    @*<th>
            <h4>@Html.SortableLink(Request, "AveragePoint", "Đánh giá")</h4>
        </th>*@
</div>
<br />
<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-sm-4 col-xs-6 col-md-3 ">
            <div class="card image-bordered btn btn-default" style="width: 205px;" onclick="@("window.location.href='" + @Url.Action("DetailsForUser", "User", new { Id = item.ID }) + "'");">
                <div class="table-bordered" >
                    <img class="card-img-top" src="@Url.Content(item.FoodPictureURL)" alt="Image Food" width="175" height="180">

                    <div class="card-block" style="padding:5px; background-color:#f5efd1">

                        <h4 class="card-title"> @Html.DisplayFor(modelItem => item.Name)</h4>

                        <p class="card-text" style="color:orangered"> @String.Format("{0:0,0 VNĐ}", item.Cost)</p>

                        <p class="card-text"> @Html.DisplayFor(modelItem => item.StoreNameDisplayOnly)</p>

                        <p class="card-text"><b>Khu vực: @Html.DisplayFor(modelItem => item.DistrictDisplayOnly)</b></p>

                        <p class="card-text" style="display:inline">
                            @String.Format("{0:0.00}", item.AveragePoint) <div style="display:inline">♥   (</div>
                            @Html.DisplayFor(modelItem => item.NumberOfRate)<div style="display:inline"> lượt)</div>
                        </p>

                        @*@Html.ActionLink("Chi tiết", "DetailsForUser", "User", new { Id = item.ID }, new { style = "color:white", @class = "btn btn-info" })*@
    
                    </div>
                </div>
            </div>

            <hr />
        </div>
    }
</div>
@Html.PagedListPager(Model, page => Request.AddQueryString(new KeyValuePair<string, string>("p", page.ToString())))



