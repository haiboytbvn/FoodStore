@using Eating2.Business.ViewModels
@model FoodViewModel
@{var noPic = 0;}
@{
    ViewBag.Title = "Thông tin món ăn";
}
<h3>Thông tin về món ăn</h3>

<div>
    <h4>@Model.Name</h4>
    @*<hr />
        <p class="text-center">
            @Html.DisplayFor(model => model.Processing)
        </p>*@
    <hr />

    <div style="background-color:#dddddd; border-radius: 5px; margin-bottom: 20px; padding: 5px 0 5px 0;">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>
        </dl>
      

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Cost)
            </dt>
            <dd>
                @String.Format("{0:0,0 VNĐ}", Model.Cost)
            </dd>
        </dl>


        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.StoreNameDisplayOnly)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.StoreNameDisplayOnly)
            </dd>
        </dl>

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.DetailsPlaceDisplayOnly)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.DetailsPlaceDisplayOnly)
            </dd>
        </dl>

        <div class="row center-block">
            @foreach (var image in Model.listFoodPicturesURL)
            {
                var number = image.number + 1;
                noPic++;
                if (image.exist == true)
                {
                    <div class="col-sm-3 col-xs-6 col-md-2">

                        <img style="cursor:pointer" id="myImg+@number" class="image-bordered" src="@Url.Content(image.path)" alt="@Model.Name @number " height="100" width="100" />

                        @*Popup hinh anh*@
                        <div id="myModal+@number" class="modal">
                            <!-- The Close Button -->
                            <span style="font-size:60px; color:white;" class="close" id="btnCls+@number" onclick="document.getElementById('myModal+').style.display='none'">&times;</span>
                            <!-- Modal Content (The Image) -->
                            <img class="modal-content" id="img+@number" style="height:482px">
                            <!-- Modal Caption (Image Text) -->
                            <div id="caption"></div>
                        </div>

                        <br /><br />
                    </div>
                }
            }
        </div>

    </div>
</div>


@*Hien thi google map*@
<div>
    <script src="http://maps.google.com/maps/api/js?key=AIzaSyCeOut48Ao-4GwpQQxq2CBgCS8XPuwkdo0" type="text/javascript"></script>


    <style>
        #map_canvas img {
            max-width: none;
        }
    </style>

    <!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
    <style>
        .infoDiv {
            height: 50px;
            width: 100px;
            -webkit-user-select: none;
            background-color: white;
        }
    </style>
    <br />
    <!-- This is the div that will contain the Google Map -->
    <div id="map_canvas" style="height: 450px;"></div>

    <!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
    @section scripts {
        <section class="scripts">

            <script type="text/javascript">

                    $(document).ready(function () {
                        Initialize();
                    });

                    // Where all the fun happens
                    function Initialize() {

                        // Google has tweaked their interface somewhat - this tells the api to use that new UI
                        google.maps.visualRefresh = true;
                        var mylocal = new google.maps.LatLng(21.038108, 105.783192);

                        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
                        var mapOptions = {
                            zoom: 16,
                            center: mylocal,
                            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
                        };

                        // This makes the div with id "map_canvas" a google map
                        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

                        // a sample list of JSON encoded data of places to visit in Tunisia
                        // you can either make up a JSON list server side, or call it from a controller using JSONResult
                        var data = [
                                  { "Id": 1, "PlaceName": "Bạn đang ở đây", "GeoLong": "21.038108", "GeoLat": "105.783192" },

                        ];

                        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
                        $.each(data, function (i, item) {
                            var marker = new google.maps.Marker({
                                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                                'map': map,
                                'title': item.PlaceName
                            });

                            // Make the marker-pin blue!
                            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                            // put in some information about each json object - in this case, the opening hours.
                            var infowindow = new google.maps.InfoWindow({
                                content: "<div class='infoDiv'><h4>" + item.PlaceName + "</div></div>"
                            });

                            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                            google.maps.event.addListener(marker, 'click', function () {
                                infowindow.open(map, marker);
                            });

                        })
                    }


            </script>
        </section>
    }

</div>

<hr />

<p>
    @*@Html.ActionLink("Sửa thông tin", "Edit", new { id = Model.ID, beforePage = "details" }) |*@
    @Html.ActionLink("Quay lại danh sách", "Search", "Home", null, null)
</p>

<hr />

@*Hien thi comment*@
<div>

    <div style="background-color:#dddddd; border-radius: 5px; margin-bottom: 20px; padding: 5px 0 5px 0;">
        <p>
            <b>Đánh giá của khách hàng về món : @Model.Name</b>
        </p>
    </div>

    @*Nhap comment*@
    <div style="min-height:150px">
        @Html.Action("AddRate", "User", new { foodId = Model.ID })
    </div>

    @*Danh sach comment*@
    <div>
        @Html.Action("IndexRateForUser", "User", new { foodId = Model.ID })
    </div>

</div>



@*Script hien popup cho hinh anh*@

<script type="text/javascript">
    for (var i = 1; i <= @noPic; i++) {

        // Get the modal
        var modal = document.getElementById('myModal+' + i);

        // Get the image and insert it inside the modal - use its "alt" text as a caption

        var img = document.getElementById('myImg+' + i);
        var modalImg = document.getElementById("img+" + i);
        var captionText = document.getElementById("caption"+i);
        img.onclick = function () {
            modal.style.display = "block";
            modalImg.src = this.src;
            captionText.innerHTML = this.alt;
        }

        // Get the <span> element that closes the modal
        var span = document.getElementById("btnCls+"+i);

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }
    }

</script>

