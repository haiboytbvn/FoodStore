@using Eating2.Business.ViewModels
@model FoodViewModel
@{var noPic = 0;}
@{
    ViewBag.Title = "Thông tin món ăn";
}
<h3>Thông tin về món ăn</h3>

<div>
    <h4>@Model.Name</h4>
    @*<hr />
        <p class="text-center">
            @Html.DisplayFor(model => model.Processing)
        </p>*@
    <hr />

    <div style="background-color:#dddddd; border-radius: 5px; margin-bottom: 20px; padding: 5px 0 5px 0;">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>
        </dl>


        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Cost)
            </dt>
            <dd>
                @String.Format("{0:0,0 VNĐ}", Model.Cost)
            </dd>
        </dl>


        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.StoreNameDisplayOnly)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.StoreNameDisplayOnly)
            </dd>
        </dl>

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.DetailsPlaceDisplayOnly)
            </dt>
            <dd>
                <p id="address">@Html.DisplayFor(model => model.DetailsPlaceDisplayOnly)</p>
            </dd>
        </dl>

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.TimeService)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TimeService)
            </dd>
        </dl>

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.StorePhoneNumber)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.StorePhoneNumber)
            </dd>
        </dl>

        <div class="row center-block">
            @foreach (var image in Model.listFoodPicturesURL)
            {
                var number = image.number + 1;
                noPic++;
                if (image.exist == true)
                {
                    <div class="col-sm-3 col-xs-6 col-md-2">

                        <img style="cursor:pointer" id="myImg+@number" class="image-bordered" src="@Url.Content(image.path)" alt="@Model.Name @number " height="100" width="100" />

                        @*Popup hinh anh*@
                        <div id="myModal+@number" class="modal">
                            <!-- The Close Button -->
                            <span style="font-size:60px; color:white;" class="close" id="btnCls+@number" onclick="document.getElementById('myModal+').style.display='none'">&times;</span>
                            <!-- Modal Content (The Image) -->
                            <img class="modal-content" id="img+@number" style="height:482px">
                            <!-- Modal Caption (Image Text) -->
                            <div id="caption"></div>
                        </div>

                        <br /><br />
                    </div>
                }
            }
        </div>

    </div>
</div>


@*Hien thi google map*@
<div>


    <style>
        #map img {
            max-width: none;
        }
    </style>

    <!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
    <style>
        .infoDiv {
            height: 50px;
            width: 100px;
            -webkit-user-select: none;
            background-color: white;
        }
    </style>
    <br />
    <!-- This is the div that will contain the Google Map -->
    <div id="map" style="height: 450px;"></div>

    <!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCeOut48Ao-4GwpQQxq2CBgCS8XPuwkdo0&callback=initMap">
    </script>
   
    <script>

        function geocodeAddress(geocoder, resultsMap, orgPlace, directionsService, directionsDisplay) {
            //var address = document.getElementById('address').value
            var address = "@Model.DetailsPlaceDisplayOnly";
            geocoder.geocode({'address': address}, function(results, status) {
                if (status === 'OK') {
                    var destPlace = results[0].geometry.location;
                    calculateAndDisplayRoute(directionsService, directionsDisplay, orgPlace, destPlace);
                }
            });

        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay, orgPlace, destPlace) {
            directionsService.route({
                origin: orgPlace,
                destination: destPlace,
                travelMode: google.maps.TravelMode.DRIVING
            }, function(response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Tìm đường đi thất bại ' + status);
                }
            });

        }

        function initMap() {
            var orgPlace;
            navigator.geolocation.getCurrentPosition(function(position) {
                var lat = position.coords.latitude;
                var lng = position.coords.longitude;
                orgPlace = new google.maps.LatLng(lat, lng);

                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 16,

                });

                //var myMarker = new google.maps.Marker({
                //    position: new google.maps.LatLng(21.038234, 105.782747),
                //    map: map,
                //    title: "Bạn đang ở đây!"
                //});

                var directionsService = new google.maps.DirectionsService;
                var directionsDisplay = new google.maps.DirectionsRenderer({
                    map: map
                });

                var geocoder = new google.maps.Geocoder();
                geocodeAddress(geocoder, map, orgPlace, directionsService, directionsDisplay);
            });
        }
    </script>

</div>

<hr />

<p>
    @*@Html.ActionLink("Sửa thông tin", "Edit", new { id = Model.ID, beforePage = "details" }) |*@
    @Html.ActionLink("Quay lại trang tìm kiếm", "Search", "Home", null, null)
</p>

<hr />

@*Hien thi comment*@
<div>

    <div style="background-color:#dddddd; border-radius: 5px; margin-bottom: 20px; padding: 5px 0 5px 0;">
        <p>
            <b>Đánh giá của khách hàng về món : @Model.Name</b>
        </p>
    </div>

    @*Nhap comment*@
    <div style="min-height:150px">
        @Html.Action("AddRate", "User", new { foodId = Model.ID })
    </div>

    @*Danh sach comment*@
    <div>
        @Html.Action("IndexRateForUser", "User", new { foodId = Model.ID })
    </div>

</div>



@*Script hien popup cho hinh anh*@

<script type="text/javascript">
    for (var i = 1; i <= @noPic; i++) {

        // Get the modal
        var modal = document.getElementById('myModal+' + i);

        // Get the image and insert it inside the modal - use its "alt" text as a caption

        var img = document.getElementById('myImg+' + i);
        var modalImg = document.getElementById("img+" + i);
        var captionText = document.getElementById("caption"+i);
        img.onclick = function () {
            modal.style.display = "block";
            modalImg.src = this.src;
            captionText.innerHTML = this.alt;
        }

        // Get the <span> element that closes the modal
        var span = document.getElementById("btnCls+"+i);

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }
    }

</script>

